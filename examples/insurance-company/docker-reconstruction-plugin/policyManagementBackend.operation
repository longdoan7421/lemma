import microservices from "policyManagementBackend.services" as policyManagementBackendServices
import technology from "../technology/docker.technology" as containerTechnology
import technology from "../technology/spring.technology" as protocolTechnology

@technology(containerTechnology)
@technology(protocolTechnology)
container PolicyManagementBackend deployment technology containerTechnology::_deployment.Docker
    depends on nodes CustomerCoreContainer, EurekaServerInfrastructure,
    used by nodes CustomerSelfServiceFrontend, PolicyManagementFrontend
	deploys policyManagementBackendServices
		::com.lakesidemutual.policymanagement.PolicyManagementBackend {
	policyManagementBackendServices::com.lakesidemutual.policymanagement.PolicyManagementBackend {
		Dockerfile('
			# syntax=docker/dockerfile:experimental
			FROM maven:3.6.1-jdk-8-alpine AS build
			ARG BASE=/usr/src/app
			COPY pom.xml ${BASE}/
			COPY src ${BASE}/src
			RUN --mount=type=cache,target=/root/.m2 mvn -f ${BASE}/pom.xml install -DskipTests

			FROM openjdk:8-jdk-alpine
			COPY --from=build /usr/src/app/target/dependency/BOOT-INF/lib/* /app/lib/
			COPY --from=build /usr/src/app/target/dependency/META-INF /app/META-INF
			COPY --from=build /usr/src/app/target/dependency/BOOT-INF/classes /app

			EXPOSE 8090
			EXPOSE 61613
			EXPOSE 61616
			ENTRYPOINT ["java","-cp","app:app/lib/*","com.lakesidemutual.policymanagement.PolicyManagementApplication"]
			')

		ComposePart('
			policy-management-backend:
			    build: policy-management-backend
			    image: lakesidemutual/policy-management-backend
			    depends_on:
			      - customer-core
			    environment:
			      - "EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://eureka-server:8761/eureka"
			      - "SPRING_PROFILES_ACTIVE=eureka"
			    ports:
			      - "8090:8090"
			      - "61613:61613"
			      - "61616:61616"
			    volumes:
			      - "maven_repo:/root/.m2"
			')

		default values {
            eureka.client.serviceUrl.defaultZone = http://localhost:8761/eureka
            apikey.header = Authorization
        }

		basic endpoints {
		    protocolTechnology::_protocols.rest: "http://localhost:8090";
		    protocolTechnology::_protocols.amqp: "http://localhost:61613";
		    protocolTechnology::_protocols.amqp: "http://localhost:61616";
		}
	}
}